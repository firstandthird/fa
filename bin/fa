#!/bin/bash

VERSION="0.1.1"
REPO=git://github.com/firstandthird/fa.git
TYPE=d
ROOT="."
QUERY=""
EXEC=""
DEPTH=10
LIST=0
INTERACTIVE=0
APP=$0
VERBOSE=0
RESULTS=""
RESULT_COUNT=0


usage() {
  cat <<-EOF

  Usage: fa [options] <query>

  Options:

    -f, --file                  search for files
    -d, --dir                   change directory (default)
    -i, --interactive           interactively choose a result
    -e, --exec                  pass in result into app (ex: vim)
    -r, --root <path>           set root folder to search from
    --depth <num>               number of directories to search in (default: $DEPTH)
    -v, --verbose               verbose output
    -V, --version               output program version
    --update                    update fa to latest version 
    -h, --help                  output help information


EOF
}

init() {
  cat <<-EOF
alias fa=". $APP"
alias fd=". $APP -d"
alias ff=". $APP -f"
alias fv=". $APP -f -e vim"
EOF
}

log() {
  if [ "$VERBOSE" = 1 ]; then
    echo $1
  fi
}

update() {
  echo "updating fa(1)"
  rm -fr /tmp/fa
  git clone $REPO \
      --depth 0 \
      /tmp/fa \
      &> /tmp/fa.log \
    && cd /tmp/fa \
    && make install \
    && echo "updated $VERSION -> `fa --version`"
}

search() {
  log "ROOT: $ROOT"
  log "TYPE: $TYPE"
  log "DEPTH: $DEPTH"
  log "QUERY: $QUERY"
  if [ -z "$QUERY" ]; then
    echo "Please pass in a search query"
  else
    unset i RESULTS
    while read -d $'\0' file; do
      RESULTS[i++]="$file"
      log "RESULT $i: $file"
    done < <(find $ROOT -maxdepth $DEPTH -type $TYPE -name "*$QUERY*" -print0)
    RESULT_COUNT=$i
  fi
}

run() {
  search

  if [ -z "$RESULTS" ]; then
    echo "No results"
    return
  fi

  if [ "$LIST" = 1 ]; then
    unset i
    for i in "${RESULTS[@]}"; do
      echo $i
    done
    return
  fi

  if [ "$INTERACTIVE" = 1 ] && [ "$RESULT_COUNT" -gt 1 ]; then
    unset i
    for i in "${!RESULTS[@]}"; do
      echo "$i) ${RESULTS[$i]}"
    done
    read -p "Which result: " index
  else
    index=0
  fi
  result=${RESULTS[$index]}

  if [ -n "$EXEC" ]; then
    eval "$EXEC $result"
    return
  fi

  case $TYPE in
    d)
      pushd $result
      ;;
    f)
      echo $result
      ;;
  esac
}

while test $# -ne 0; do
  arg=$1
  shift
  case $arg in
    -h|--help)
      usage
      return
      ;;
    -V|--version)
      echo $VERSION
      return
      ;;
    --init)
      init
      exit
      ;;
    -r|--root)
      ROOT=$1
      shift
      ;;
    -d|--dir)
      TYPE=d
      ;;
    -f|--file)
      TYPE=f
      ;;
    --depth)
      DEPTH=$1
      shift
      ;;
    -l|--ls)
      LIST=1
      ;;
    -i|--interactive)
      INTERACTIVE=1
      ;;
    -e|--exec)
      EXEC=$1
      shift
      ;;
    -v|--verbose)
      VERBOSE=1
      ;;
    --update)
      update
      return
      ;;
    *)
      QUERY=$arg
      ;;
  esac
done

if [ -n "$FA_INTERACTIVE" ]; then
  INTERACTIVE="$FA_INTERACTIVE"
fi
run
